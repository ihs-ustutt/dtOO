# - Find MESHKIT
# Find the MESHKIT includes and client library
# This module defines
# MESHKIT_DEFINITIONS: compiler flags for compiling with MESHKIT
# MESHKIT_INCLUDE_DIR: where to find MESHKIT.h
# MESHKIT_LIBRARIES: the libraries needed to use MESHKIT
# MESHKIT_FOUND: if false, do not try to use MESHKIT
#SET(MESHKIT_INCLUDE_DIR "not found")
#SET(MESHKIT_LIBRARIES "not found")

#SET(MESHKIT_DEFINITIONS "-liGeom")
IF(MESHKIT_INCLUDE_DIR AND MESHKIT_LIBRARIES AND MESHKIT_LINK_DIRECTORY)
  SET(MESHKIT_FOUND TRUE)
ELSE(MESHKIT_INCLUDE_DIR AND MESHKIT_LIBRARIES AND MESHKIT_LINK_DIRECTORY)
  FIND_PATH(MESHKIT_INCLUDE_DIR meshkit/MKCore.hpp
  ${DTOO_EXTERNLIBS}/meshkit/include/
  )
  FIND_LIBRARY(MESHKIT_LIBRARIES NAMES MESHKIT MeshKit
  PATHS
  ${DTOO_EXTERNLIBS}/meshkit/lib
  ${DTOO_EXTERNLIBS}/meshkit/lib64
  )

 FIND_PATH(MESHKIT_LINK_DIRECTORY libMeshKit.so
    ${DTOO_EXTERNLIBS}/ALL/lib
    $ENV{DTOO_ROOTDIR}/lib
  )

  IF(MESHKIT_INCLUDE_DIR AND MESHKIT_LIBRARIES AND MESHKIT_LINK_DIRECTORY)
    SET(MESHKIT_FOUND TRUE)
    MESSAGE(STATUS "Found MESHKIT: ${MESHKIT_INCLUDE_DIR}, ${MESHKIT_LIBRARIES}, ${MESHKIT_LINK_DIRECTORY}")
  ELSE(MESHKIT_INCLUDE_DIR AND MESHKIT_LIBRARIES AND MESHKIT_LINK_DIRECTORY)
    SET(MESHKIT_FOUND FALSE)
    MESSAGE(STATUS "MESHKIT not found.")
  ENDIF(MESHKIT_INCLUDE_DIR AND MESHKIT_LIBRARIES AND MESHKIT_LINK_DIRECTORY)

  MARK_AS_ADVANCED(MESHKIT_INCLUDE_DIR MESHKIT_LIBRARIES MESHKIT_LINK_DIRECTORY)
ENDIF(MESHKIT_INCLUDE_DIR AND MESHKIT_LIBRARIES AND MESHKIT_LINK_DIRECTORY)