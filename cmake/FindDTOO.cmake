# - Find DTOO
# Find the DTOO includes and client library
# This module defines
# DTOO_DEFINITIONS: compiler flags for compiling with DTOO
# DTOO_INCLUDE_DIR: where to find DTOO.h
# DTOO_LIBRARIES: the libraries needed to use DTOO
# DTOO_FOUND: if false, do not try to use DTOO
#SET(DTOO_INCLUDE_DIR "not found")
#SET(DTOO_LIBRARIES "not found")
IF(DTOO_INCLUDE_DIR AND DTOO_LIBRARIES AND DTOO_LINK_DIRECTORY)
  SET(DTOO_FOUND TRUE)
ELSE(DTOO_INCLUDE_DIR AND DTOO_LIBRARIES AND DTOO_LINK_DIRECTORY)
  FIND_PATH(DTOO_INCLUDE_DIR progHelper.h
    $ENV{DTOO_ROOTDIR}/include
    /usr/include/
  )

  FIND_LIBRARY(DTOO_LIBRARIES NAMES dtOO libdtOO
    PATHS
    $ENV{DTOO_ROOTDIR}/lib
    /usr/lib/dtOO
    /usr/lib64/dtOO
  )

 FIND_PATH(DTOO_LINK_DIRECTORY libdtOO.so
    $ENV{EXTERNLIBS}/ALL/lib
    $ENV{DTOO_ROOTDIR}/lib
    /usr/lib
    /usr/local/lib
    /usr/lib/CGAL
    /usr/lib64
    /usr/local/lib64
    /usr/lib64/CGAL
  )

  IF(DTOO_INCLUDE_DIR AND DTOO_LIBRARIES AND DTOO_LINK_DIRECTORY)
    SET(DTOO_FOUND TRUE)
    MESSAGE(STATUS "Found DTOO: ${DTOO_INCLUDE_DIR}, ${DTOO_LIBRARIES}, ${DTOO_LINK_DIRECTORY}")
  ELSE(DTOO_INCLUDE_DIR AND DTOO_LIBRARIES AND DTOO_LINK_DIRECTORY)
    SET(DTOO_FOUND FALSE)
    MESSAGE(STATUS "DTOO not found.")
  ENDIF(DTOO_INCLUDE_DIR AND DTOO_LIBRARIES AND DTOO_LINK_DIRECTORY)

  MARK_AS_ADVANCED(DTOO_INCLUDE_DIR DTOO_LIBRARIES)
ENDIF(DTOO_INCLUDE_DIR AND DTOO_LIBRARIES AND DTOO_LINK_DIRECTORY)
