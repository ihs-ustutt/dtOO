# - Find CGM
# Find the CGM includes and client library
# This module defines
# CGM_DEFINITIONS: compiler flags for compiling with CGM
# CGM_INCLUDE_DIR: where to find CGM.h
# CGM_LIBRARIES: the libraries needed to use CGM
# CGM_FOUND: if false, do not try to use CGM
#SET(CGM_INCLUDE_DIR "not found")
#SET(CGM_LIBRARIES "not found")

#SET(CGM_DEFINITIONS "-liGeom")
IF(CGM_INCLUDE_DIR AND CGM_LIBRARIES AND CGM_LINK_DIRECTORY)
  SET(CGM_FOUND TRUE)
ELSE(CGM_INCLUDE_DIR AND CGM_LIBRARIES AND CGM_LINK_DIRECTORY)
  FIND_PATH(CGM_INCLUDE_DIR iGeom.h
  ${DTOO_EXTERNLIBS}/cgm/include/
  )
  FIND_LIBRARY(CGM_LIBRARIES NAMES iGeom
  PATHS
  ${DTOO_EXTERNLIBS}/cgm/lib
  ${DTOO_EXTERNLIBS}/cgm/lib64
  )

 FIND_PATH(CGM_LINK_DIRECTORY libiGeom.so
    ${DTOO_EXTERNLIBS}/ALL/lib
    $ENV{DTOO_ROOTDIR}/lib
  )

  IF(CGM_INCLUDE_DIR AND CGM_LIBRARIES AND CGM_LINK_DIRECTORY)
    SET(CGM_FOUND TRUE)
    MESSAGE(STATUS "Found CGM: ${CGM_INCLUDE_DIR}, ${CGM_LIBRARIES}, ${CGM_LINK_DIRECTORY}")
  ELSE(CGM_INCLUDE_DIR AND CGM_LIBRARIES AND CGM_LINK_DIRECTORY)
    SET(CGM_FOUND FALSE)
    MESSAGE(STATUS "CGM not found.")
  ENDIF(CGM_INCLUDE_DIR AND CGM_LIBRARIES AND CGM_LINK_DIRECTORY)

  MARK_AS_ADVANCED(CGM_INCLUDE_DIR CGM_LIBRARIES CGM_LINK_DIRECTORY)
ENDIF(CGM_INCLUDE_DIR AND CGM_LIBRARIES AND CGM_LINK_DIRECTORY)