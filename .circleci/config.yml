version: 2.1

jobs:
  build-opensuse:
    docker:
      - image: "cimg/base:current"
    resource_class: large
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build and Push Docker image
          command: |
            GIT_REV=`git rev-parse HEAD`
            GIT_DESC=`git describe --tags`
            GIT_BRANCH=`git rev-parse --abbrev-ref HEAD`
            GIT_THIRDPARTY_SHA=`git ls-tree HEAD dtOO-ThirdParty | awk '{print $3}'`
            DOCKER_TAG=unstable
            if [[ "$GIT_BRANCH" == "main" ]]; then DOCKER_TAG=stable ; fi
            docker build \
              --build-arg "TAG=${GIT_THIRDPARTY_SHA}" \
              --build-arg "GIT_REV=${GIT_REV}" \
              --progress=plain \
              -t ${DOCKER_USERNAME}/dtoo-opensuse:${GIT_REV} \
              -t ${DOCKER_USERNAME}/dtoo-opensuse:latest \
              -t ${DOCKER_USERNAME}/dtoo-opensuse:${GIT_DESC} \
              -t ${DOCKER_USERNAME}/dtoo-opensuse:${DOCKER_TAG} .
            echo "$DOCKER_PASSWORD" \
              | docker login -u "$DOCKER_USERNAME" --password-stdin
            docker push \
              --all-tags \
              ${DOCKER_USERNAME}/dtoo-opensuse
  build-ubuntu:
    docker:
      - image: "cimg/base:current"
    resource_class: large
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build and Push Docker image
          command: |
            GIT_REV=`git rev-parse HEAD`
            GIT_DESC=`git describe --tags`
            GIT_BRANCH=`git rev-parse --abbrev-ref HEAD`
            GIT_THIRDPARTY_SHA=`git ls-tree HEAD dtOO-ThirdParty | awk '{print $3}'`
            DOCKER_TAG=unstable
            if [[ "$GIT_BRANCH" == "main" ]]; then DOCKER_TAG=stable ; fi
            docker build \
              --build-arg "TAG=${GIT_THIRDPARTY_SHA}" \
              --build-arg "GIT_REV=${GIT_REV}" \
              --build-arg "CONTAINER=atismer/dtoo-base-ubuntu" \
              --progress=plain \
              -t ${DOCKER_USERNAME}/dtoo-ubuntu:${GIT_REV} \
              -t ${DOCKER_USERNAME}/dtoo-ubuntu:latest \
              -t ${DOCKER_USERNAME}/dtoo-ubuntu:${GIT_DESC} \
              -t ${DOCKER_USERNAME}/dtoo-ubuntu:${DOCKER_TAG} .
            echo "$DOCKER_PASSWORD" \
              | docker login -u "$DOCKER_USERNAME" --password-stdin
            docker push \
              --all-tags \
              ${DOCKER_USERNAME}/dtoo-ubuntu
  fakebuild:
    docker:
      - image: "cimg/base:current"
    resource_class: small
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build and Push Docker image
          command: |
            echo "Fake build"
  test:
    docker:
      - image: "cimg/base:current"
    resource_class: small
    parameters:
      tregs:
        type: string
      oss:
        type: string
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Test Docker Image
          command: |
            GIT_REV=`git rev-parse HEAD`
            docker run \
              -t ${DOCKER_USERNAME}/dtoo-<< parameters.oss >>:${GIT_REV} \
              bash --login -c \
              "cd /dtOO/build && ctest -R '^<< parameters.tregs >>$|^<< parameters.tregs >>.*<< parameters.oss >>.*'"

workflows:
  wf-build:
    jobs:
      - build-opensuse
      - build-ubuntu
      #- fakebuild
      - test:
          requires:
            - build-opensuse
            - build-ubuntu
          matrix: 
            parameters:
              tregs: [
                "baseSWIG", 
                "transformerSWIG", 
                "analyticGeometrySWIG", 
                "constValueSWIG",
                "canadaLight",
                "dtClusteredSingletonState",
                "partRotatingMap2dTo3d",
                "pyDtOO-dtField",
                "write-runData",
                "pyDtOO-doctest",
                "interTransMesh",
                "floatAtt",
                "naca",
                "tistos",
                "meshSimpleSurface",
                "meshPrismBlock"
              ]
              oss: [
                'ubuntu',
                'opensuse'
              ]
